{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "AddTodo.svelte",
    "Todo.svelte",
    "TodoList.svelte"
  ],
  "sourcesContent": [
    "<script>\r\nimport { text } from \"svelte/internal\";\r\nimport {createEventDispatcher} from \"svelte\"\r\n\r\nconst dispatch = createEventDispatcher()\r\n\r\nlet data={\r\n    todo_body:\"\"\r\n}\r\n\r\nconst addToDoAPI = 'http://localhost:3000/addToDo'\r\n\r\nlet addToDo = async () => {\r\n\r\n    if(data.todo_body.trim() === ''){\r\n        return\r\n    }\r\n    \r\n    const res = await fetch(`${addToDoAPI}`,{\r\n        method: 'POST',\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)    \r\n    })\r\n\r\n    const post = res.json()\r\n    dispatch(\"Entry Added!\", post)\r\n\r\n    let todoBox = document.getElementById('todoBox')\r\n    todoBox.value = ''\r\n}\r\n\r\n</script>\r\n<div class=\"container\">\r\n    <form on:submit|preventDefault={addToDo}>\r\n        <div class=\"add-card row col-sm-12\">\r\n            <div class=\"todo-input\">\r\n                <input id='todoBox' autocomplete='off' type=\"text\" bind:value={data.todo_body} class=\"input-card\"/>\r\n            </div>\r\n            <div class='add-btn'>\r\n                <button class='plus-btn' type=\"submit\">+\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>  \r\n</div>\r\n\r\n\r\n<style>\r\n    \r\n    .todo-input{\r\n        text-align: right;\r\n    }\r\n    .add-btn{\r\n        text-align: left;\r\n    }\r\n    .input-card{\r\n        width: 400px;\r\n        height:50px;\r\n        border-top-left-radius: 15px;\r\n        border-bottom-left-radius: 15px;\r\n    }\r\n    .input-card:focus, .plus-btn:focus{\r\n        outline:none;\r\n    }\r\n    .plus-btn{\r\n        height: 50px;\r\n        width: 50px;\r\n        border-top-right-radius: 15px;\r\n        border-bottom-right-radius: 15px;\r\n    }\r\n</style>",
    "<script>\r\n    import {createEventDispatcher} from 'svelte'\r\n\r\n    const dispatch = createEventDispatcher()\r\n\r\n    export let todoID\r\n    export let todoBody\r\n    export let todoStatus\r\n\r\n    let data = {\r\n        todo_id: todoID,\r\n        todo_status: todoStatus\r\n    }\r\n\r\n    const updateToDoAPI = 'http://localhost:3000/updateToDO'\r\n\r\n    const change = async (event) => {\r\n        \r\n        let s = document.getElementById(todoID)\r\n        data.todo_status =  s.checked\r\n        if(data.todo_id !== todoID){\r\n            \r\n            return \r\n        }\r\n\r\n        const res = await fetch(`${updateToDoAPI}`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n\r\n        const post = res.json()\r\n        dispatch('todo', {\r\n            data: data\r\n        })\r\n\r\n    }\r\n\r\n</script>\r\n\r\n\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"todo col-sm-12\">\r\n            <div class=\"todo-card\">\r\n                <label class=\"content\" for='check'>\r\n                    <input id={todoID} type=\"checkbox\" checked={todoStatus} on:click='{event => change(event)}'/>{todoBody}\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<style>\r\n    .todo{\r\n        margin-bottom: 5x;\r\n        font-size: large;\r\n    }\r\n    .todo-card{\r\n        max-width: 500px;\r\n    }\r\n    .content{\r\n        width: 450px;\r\n        overflow: hidden;\r\n        display: inline-block;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n    }\r\n    input[type='checkbox']{\r\n        vertical-align: middle;\r\n        margin-right:20px;\r\n    }\r\n</style>",
    "<script>\r\n    import {onMount} from 'svelte'\r\n    import AddTodo from './AddTodo.svelte'\r\n\r\n    let data = {\r\n        todo_id: '',\r\n        todo_status: ''\r\n    }\r\n   \r\n    const updateToDoAPI = 'http://localhost:3000/updateToDO'\r\n    const todolistAPI = 'http://localhost:3000/'\r\n\r\n    let todos = []\r\n\r\n    onMount(async () => {\r\n        let res = await fetch(todolistAPI)\r\n        todos = await res.json()\r\n        console.log(todos)\r\n    })\r\n\r\n    const updateUI = (event) => {\r\n        let pendingBlock = document.getElementById('pending')\r\n        let completeBlock = document.getElementById('completed')\r\n        let current = document.getElementById(event.target.id+'Holder')\r\n        current.remove()\r\n        if(event.target.checked === true){\r\n            completeBlock.innerHTML += current.innerHTML\r\n        }\r\n        else{\r\n            console.log(false)\r\n        }\r\n    }\r\n\r\n    const change = async (event) => {\r\n        data.todo_id = event.target.id\r\n        data.todo_status = event.target.checked\r\n\r\n         let s = document.getElementById(data.todo_id)\r\n         data.todo_status =  s.checked\r\n        \r\n\r\n         const res = await fetch(`${updateToDoAPI}`,{\r\n             method: 'POST',\r\n             headers: {\r\n                 'Content-Type' : 'application/json'\r\n             },\r\n             body: JSON.stringify(data)\r\n         })\r\n\r\n         const post = res.json()\r\n         updateUI(event)\r\n    }\r\n\r\n    \r\n\r\n</script>\r\n\r\n<div class=\"container app-card\">\r\n    <div class='app-title'>\r\n        <p>To Do App<p>\r\n    </div>\r\n    <div class=\"container todo-list\">\r\n        <div class=\"add-card\">\r\n            <AddTodo/>\r\n        </div>\r\n        <div class=\"todos\">\r\n            <div class='title'>\r\n                <p>Pending:<p>\r\n            </div>\r\n            <div id='pending'>\r\n                {#each todos as todo}\r\n                    {#if todo.todo_checked === false}\r\n                    <div class=\"container\" id={todo.holder}>\r\n                        <div class=\"row\">\r\n                            <div class=\"todo col-sm-12\">\r\n                                <div class=\"todo-card\" >\r\n                                    <label class=\"content\" for='check'>\r\n                                        <input id={todo.todo_id} type=\"checkbox\" checked={todo.todo_checked} on:click='{event => change(event)}'/>{todo.todo_body}\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/if}\r\n                {/each}\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div class='title'>\r\n                <p>Completed:<p>\r\n            </div>\r\n            <div id='completed'>\r\n                {#each todos as todo}\r\n                    {#if todo.todo_checked === true}\r\n                    <div class=\"container\" id={todo.holder}>\r\n                        <div class=\"row done\">\r\n                            <div class=\"todo col-sm-12\">\r\n                                <div class=\"todo-card\">\r\n                                    <label class=\"content done\" for='check'>\r\n                                        <input id={todo.todo_id} type=\"checkbox\" checked={todo.todo_checked} on:click='{event => change(event)}'/>{todo.todo_body}\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/if}\r\n                {/each}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<style>\r\n    .app-title{\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:x-large;\r\n        text-align:left;\r\n        margin-bottom: 50px;\r\n    }\r\n    .app-card{\r\n        position:absolute;\r\n        top:15%;\r\n        left:30%;\r\n    }\r\n    .title{\r\n        margin-top: 20px;\r\n        font-size: larger;\r\n        font-weight:bolder;\r\n    }\r\n    .done{\r\n        text-decoration: line-through;\r\n    }\r\n    .todo-list{\r\n        position: relative;\r\n        margin: 0 auto;\r\n        padding-left: 5%;\r\n    }\r\n    .todos{\r\n        margin-top: 30px;\r\n    }\r\n    .add-card{\r\n        margin-top: 30px;\r\n    }\r\n    .todo{\r\n        margin-bottom: 5x;\r\n        font-size: large;\r\n    }\r\n    .todo-card{\r\n        max-width: 500px;\r\n    }\r\n    .content{\r\n        width: 450px;\r\n        overflow: hidden;\r\n        display: inline-block;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n    }\r\n    input[type='checkbox']{\r\n        vertical-align: middle;\r\n        margin-right:20px;\r\n    }\r\n</style>"
  ],
  "names": [],
  "mappings": "AAmDI,yBAAW,CAAC,AACR,UAAU,CAAE,KAAK,AACrB,CAAC,AACD,sBAAQ,CAAC,AACL,UAAU,CAAE,IAAI,AACpB,CAAC,AACD,yBAAW,CAAC,AACR,KAAK,CAAE,KAAK,CACZ,OAAO,IAAI,CACX,sBAAsB,CAAE,IAAI,CAC5B,yBAAyB,CAAE,IAAI,AACnC,CAAC,AACD,yBAAW,MAAM,CAAE,uBAAS,MAAM,CAAC,AAC/B,QAAQ,IAAI,AAChB,CAAC,AACD,uBAAS,CAAC,AACN,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,uBAAuB,CAAE,IAAI,CAC7B,0BAA0B,CAAE,IAAI,AACpC,CAAC;ACbD,mBAAK,CAAC,AACF,aAAa,CAAE,EAAE,CACjB,SAAS,CAAE,KAAK,AACpB,CAAC,AACD,wBAAU,CAAC,AACP,SAAS,CAAE,KAAK,AACpB,CAAC,AACD,sBAAQ,CAAC,AACL,KAAK,CAAE,KAAK,CACZ,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,YAAY,CACrB,aAAa,CAAE,QAAQ,CACvB,WAAW,CAAE,MAAM,AACvB,CAAC,AACD,KAAK,CAAC,IAAI,CAAC,UAAU,eAAC,CAAC,AACnB,cAAc,CAAE,MAAM,CACtB,aAAa,IAAI,AACrB,CAAC;ACwCD,yBAAU,CAAC,AACP,WAAW,CAAE,aAAa,CAAC,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,CAAC,gBAAgB,CAAC,CAAC,UAAU,CACxI,UAAU,OAAO,CACjB,WAAW,IAAI,CACf,aAAa,CAAE,IAAI,AACvB,CAAC,AACD,wBAAS,CAAC,AACN,SAAS,QAAQ,CACjB,IAAI,GAAG,CACP,KAAK,GAAG,AACZ,CAAC,AACD,qBAAM,CAAC,AACH,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,MAAM,CACjB,YAAY,MAAM,AACtB,CAAC,AACD,oBAAK,CAAC,AACF,eAAe,CAAE,YAAY,AACjC,CAAC,AACD,yBAAU,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,YAAY,CAAE,EAAE,AACpB,CAAC,AACD,qBAAM,CAAC,AACH,UAAU,CAAE,IAAI,AACpB,CAAC,AACD,wBAAS,CAAC,AACN,UAAU,CAAE,IAAI,AACpB,CAAC,AACD,oBAAK,CAAC,AACF,aAAa,CAAE,EAAE,CACjB,SAAS,CAAE,KAAK,AACpB,CAAC,AACD,yBAAU,CAAC,AACP,SAAS,CAAE,KAAK,AACpB,CAAC,AACD,uBAAQ,CAAC,AACL,KAAK,CAAE,KAAK,CACZ,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,YAAY,CACrB,aAAa,CAAE,QAAQ,CACvB,WAAW,CAAE,MAAM,AACvB,CAAC,AACD,KAAK,CAAC,IAAI,CAAC,UAAU,gBAAC,CAAC,AACnB,cAAc,CAAE,MAAM,CACtB,aAAa,IAAI,AACrB,CAAC"
}